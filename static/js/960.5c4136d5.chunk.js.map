{"version":3,"file":"static/js/960.5c4136d5.chunk.js","mappings":"6NAuBaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAba,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfP,GACEQ,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACP,EAGgCC,aAAa,MAAKC,SAAA,EAC9Cb,EAAAA,EAAAA,MAAA,SAAAa,SAAA,CAAO,SAELC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,QAAQC,KAAK,cAE3BhB,EAAAA,EAAAA,MAAA,SAAAa,SAAA,CAAO,YAELC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,WAAWC,KAAK,iBAE9BF,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,aAgD5B,EC7Fe,SAASI,IACtB,OACEjB,EAAAA,EAAAA,MAAA,OAAAa,SAAA,EACEC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAAAL,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aAETC,EAAAA,EAAAA,KAACjB,EAAS,MAGhB,C","sources":["components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["// import { Formik, Form, Field} from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'services/fetchAuth';\n// import {\n//   FormControl,\n//   FormLabel,\n//   Input,\n//   Button,\n//   FormErrorMessage,\n// } from '@chakra-ui/react';\n// import * as Yup from 'yup';\n// const contactSchema = Yup.object().shape({\n//   name: Yup.string()\n//     .min(3, 'Too Short!')\n//     .max(30, 'Too Long!')\n//     .required('Required'),\n//   number: Yup.number()\n//     .integer('Must be an integer')\n//     .min(1000000, 'Must be at least 7 digits')\n//     // .max(9999999, 'Must be at most 7 digits')\n//     .required('Required'),\n// });\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Email\n        <input type=\"email\" name=\"email\" />\n      </label>\n      <label>\n        Password\n        <input type=\"password\" name=\"password\" />\n      </label>\n      <button type=\"submit\">Log In</button>\n    </form>\n\n    // <Formik\n    //   initialValues={{\n    //       email: '',\n    //       password: '',\n    //   }}\n    //   //  validationSchema={contactSchema}\n    //   onSubmit={(values, actions) => {\n    //       handleSubmit(values);\n    //       actions.resetForm();\n    //     }}\n    // >\n      \n    //     <Form>\n    //       <Field name='email'>\n    //         {({ field, form }) => (\n    //           <FormControl isInvalid={form.errors.name && form.touched.name}>\n    //             <FormLabel>Email</FormLabel>\n    //             <Input {...field} placeholder='email' />\n    //             <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n    //           </FormControl>\n    //         )}\n    //     </Field>\n    //     <Field name='password'>\n    //         {({ field, form }) => (\n    //           <FormControl isInvalid={form.errors.name && form.touched.name}>\n    //             <FormLabel>Password</FormLabel>\n    //             <Input {...field} placeholder='password' />\n    //             <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n    //           </FormControl>\n    //         )}\n    //     </Field>\n        \n    //       <Button\n    //         mt={4}\n    //         colorScheme='teal'\n    //         type='submit'\n    //       >\n    //         Log In\n    //       </Button>\n    //     </Form>\n      \n    // </Formik>\n\n    \n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","autoComplete","children","_jsx","type","name","Login","Helmet"],"sourceRoot":""}