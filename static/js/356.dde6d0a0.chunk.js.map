{"version":3,"file":"static/js/356.dde6d0a0.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { FaTrashCan } from 'react-icons/fa6';\nexport const StyledIcon = styled(FaTrashCan)`\n  color: #f5904d;\n  &:hover {\n    color: #f8731c;\n  }\n`;\n\nexport const List = styled.ul`\n  width: 50%;\n  list-style-type: none;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  margin: 30px auto;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 10px;\n  padding: 10px;\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 3px -2px,\n    rgb(0 0 0 / 14%) 0px 3px 4px 0px, rgb(0 0 0 / 12%) 0px 1px 8px 0px;\n  border-radius: 4px;\n  background-color: rgb(254, 236, 224);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ListItemText = styled.div`\n  font-size: 16px;\n`;\n\nexport const DeleteButton = styled.button`\n  background-color: inherit;\n  color: #fff;\n  border: none;\n  font-size: 14px;\n  cursor: pointer;\n  outline: none;\n  border-radius: 4px;\n`;\n","import {\n  ListItemText,\n  DeleteButton,\n  ListItem,\n  List,\n} from './ContactList.styled';\nimport { selectVisibleContacts } from '../../redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'services/fetchContacts';\nimport { StyledIcon } from './ContactList.styled';\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => {\n        return (\n          <ListItem key={id}>\n            <ListItemText>\n              {name} - {number}\n            </ListItemText>\n            <DeleteButton onClick={() => dispatch(deleteContact(id))}>\n              <StyledIcon size={22} />\n            </DeleteButton>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  max-width: 50%;\n  margin: 0 auto;\n  text-align: center;\n  padding: 20px;\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 3px -2px,\n    rgb(0 0 0 / 14%) 0px 3px 4px 0px, rgb(0 0 0 / 12%) 0px 1px 8px 0px;\n  border-radius: 8px;\n  background-color: rgb(254, 236, 224);\n`;\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const Field = styled(FormikField)`\n  font-size: 16px;\n  border: 1px solid #f5904d;\n  border-radius: 4px;\n  outline: none;\n  padding: 8px;\n`;\n\nexport const FormButton = styled.button`\n  background-color: #f5904d;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  outline: none;\n  border-radius: 4px;\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 3px -2px,\n    rgb(0 0 0 / 14%) 0px 3px 4px 0px, rgb(0 0 0 / 12%) 0px 1px 8px 0px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #f8731c;\n  }\n`;\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 14;\n  color: #d15803;\n`;\n","import { Formik } from 'formik';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  Form,\n  StyledLabel,\n  Field,\n  FormButton,\n  ErrorMessage,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\nimport { addContact } from 'services/fetchContacts';\nimport * as Yup from 'yup';\nconst contactSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(30, 'Too Long!')\n    .required('Required'),\n  number: Yup.number()\n    .integer('Must be an integer')\n    .min(1000000, 'Must be at least 7 digits')\n    // .max(9999999, 'Must be at most 7 digits')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const handleContacts = values => {\n    const checkContact = contacts.find(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n\n    if (checkContact) {\n      Notify.warning(`${values.name} is already in contacts.`, {\n        width: '400px',\n        position: 'center-center',\n        timeout: 2000,\n        fontSize: '20px',\n      });\n      return;\n    }\n    dispatch(addContact(values));\n  };\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={contactSchema}\n        onSubmit={(values, actions) => {\n          handleContacts(values);\n          actions.resetForm();\n        }}\n      >\n        <Form>\n          <StyledLabel htmlFor=\"name\">\n            Name:\n            <Field name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </StyledLabel>\n\n          <StyledLabel htmlFor=\"number\">\n            Number:\n            <Field name=\"number\" type=\"tel\" />\n            <ErrorMessage name=\"number\" component=\"span\" />\n          </StyledLabel>\n\n          <FormButton type=\"submit\">Add contact</FormButton>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport { selectIsLoading } from '../redux/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'services/fetchContacts';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your contacts</title>\n\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactForm />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["StyledIcon","styled","FaTrashCan","_templateObject","_taggedTemplateLiteral","List","_templateObject2","ListItem","_templateObject3","ListItemText","_templateObject4","DeleteButton","_templateObject5","ContactList","dispatch","useDispatch","visibleContacts","useSelector","selectVisibleContacts","_jsx","children","map","_ref","id","name","number","_jsxs","onClick","deleteContact","size","Form","FormikForm","StyledLabel","Field","FormikField","FormButton","ErrorMessage","FormikError","contactSchema","Yup","shape","min","max","required","integer","ContactForm","contacts","selectContacts","Formik","initialValues","validationSchema","onSubmit","values","actions","find","contact","toLowerCase","Notify","concat","width","position","timeout","fontSize","addContact","handleContacts","resetForm","htmlFor","component","type","Contacts","isLoading","selectIsLoading","useEffect","fetchContacts","_Fragment"],"sourceRoot":""}