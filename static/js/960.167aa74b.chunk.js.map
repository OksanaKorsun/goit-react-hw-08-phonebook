{"version":3,"file":"static/js/960.167aa74b.chunk.js","mappings":"qPAEaA,EAAaC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oLAWxBC,EAAcH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uHAQ1BG,EAASL,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wb,qJCjBtBK,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAEE,OAAlBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACd,OAAQD,GACN,IAAK,QACHT,EAASU,GACT,MACF,IAAK,WACHN,EAAYM,GAKlB,EAaA,OACEC,EAAAA,EAAAA,MAAC3B,EAAAA,GAAU,CAAC4B,SAbO,SAAAN,GACnBA,EAAEO,iBACF,IAAMC,EAAOR,EAAES,cACftB,GACEuB,EAAAA,EAAAA,IAAM,CACJjB,MAAOe,EAAKG,SAASlB,MAAMW,MAC3BP,SAAUW,EAAKG,SAASd,SAASO,SAGrCI,EAAKI,OACP,EAGsCC,aAAa,MAAKC,SAAA,EACpDC,EAAAA,EAAAA,KAACjC,EAAAA,GAAW,CACVkC,KAAK,QACLb,KAAK,QACLC,MAAOX,EACPwB,SAAUlB,EACVmB,UAAQ,EACRC,YAAY,YAGdJ,EAAAA,EAAAA,KAACjC,EAAAA,GAAW,CACVkC,KAAK,WACLb,KAAK,WACLC,MAAOP,EACPoB,SAAUlB,EACVmB,UAAQ,EACRC,YAAY,eAGdJ,EAAAA,EAAAA,KAAC/B,EAAAA,GAAM,CAACgC,KAAK,SAAQF,SAAC,aAG5B,ECrDe,SAASM,IACtB,OACEf,EAAAA,EAAAA,MAACgB,EAAAA,EAAS,CAACC,KAAK,KAAKC,aAAa,KAAKC,UAAU,SAASC,GAAG,IAAGX,SAAA,EAC9DC,EAAAA,EAAAA,KAACW,EAAAA,EAAO,CAACC,GAAG,KAAKC,KAAK,KAAId,SAAC,WAG3BC,EAAAA,EAAAA,KAAC7B,EAAS,MAGhB,C,0KCoBamC,GAAYQ,EAAAA,EAAAA,IAAkC,SACzDC,EACAC,GAEA,OAA8CC,EAAAA,EAAAA,IAAiBF,GAAvDG,EAAAA,EAAAA,UAAWC,EAAAA,EAAAA,cAAkBC,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAE/BC,GAASC,EAAAA,EAAAA,IAAe,YAAaP,GAE3C,OACE,SAACQ,EAAAA,EAAAA,KAAUC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CACTR,IAAAA,EACAE,WAAWO,EAAAA,EAAAA,IAAG,mBAAoBP,IAC9BE,GAAAA,CAAAA,EAAAA,CACJM,OAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CAAAA,EACKL,GACCF,GAAiB,CACnBQ,QAAS,OACTC,cAAe,SACfC,WAAY,aAKtB,IAEAvB,EAAUwB,YAAc,W,0JCpCXnB,GAAUG,EAAAA,EAAAA,IAA+B,SACpDC,EACAC,GAEA,IAAMK,GAASC,EAAAA,EAAAA,IAAe,UAAWP,GACzC,GAA+BE,EAAAA,EAAAA,IAAiBF,GAA1BK,GAAdF,EAAAA,WAAcE,EAAAA,EAAAA,GAAAA,EAAAA,IAEtB,OACE,SAACG,EAAAA,EAAAA,IAASQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CACRf,IAAAA,EACAE,WAAWO,EAAAA,EAAAA,IAAG,iBAAkBV,EAAMG,YAClCE,GAAAA,CAAAA,EAAAA,CACJM,MAAOL,IAGb,IAEAV,EAAQmB,YAAc,S","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.js","../node_modules/@chakra-ui/layout/src/container.tsx","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import styled from 'styled-components';\n \nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  max-width: 90%;\n  margin: 0 auto;\n  text-align: center;\n  padding: 20px 0;\n  background-color: inherit;\n`;\n\nexport const StyledField = styled.input`\n  font-size: 16px;\n  border: 1px solid #1C56C3;\n  border-radius: 4px;\n  outline: none;\n  padding: 14px;\n`;\n\nexport const Button = styled.button`\n  background-color: #1C56C3;\n  color: #fff;\n  border: none;\n  padding: 14px 20px;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  outline: none;\n  border-radius: 4px;\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 3px -2px,\n    rgb(0 0 0 / 14%) 0px 3px 4px 0px, rgb(0 0 0 / 12%) 0px 1px 8px 0px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color:#0E45AB ;\n  }\n`;","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'services/fetchAuth';\nimport { Button, StyledField, StyledForm } from './LoginForm.styled';\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit} autoComplete=\"off\">\n      <StyledField\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        required\n        placeholder=\"Email:\"\n      />\n\n      <StyledField\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        required\n        placeholder=\"Password:\"\n      />\n\n      <Button type=\"submit\">Log In</Button>\n    </StyledForm>\n  );\n};\n","import { Container, Heading } from '@chakra-ui/react';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <Container maxW=\"md\" borderRadius=\"md\" textAlign=\"center\" mt=\"4\">\n      <Heading as=\"h2\" size=\"md\">\n        Login\n      </Heading>\n      <LoginForm />\n    </Container>\n  );\n}\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["StyledForm","styled","_templateObject","_taggedTemplateLiteral","StyledField","_templateObject2","Button","_templateObject3","LoginForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleChange","e","_e$target","target","name","value","_jsxs","onSubmit","preventDefault","form","currentTarget","logIn","elements","reset","autoComplete","children","_jsx","type","onChange","required","placeholder","Login","Container","maxW","borderRadius","textAlign","mt","Heading","as","size","forwardRef","props","ref","omitThemingProps","className","centerContent","rest","styles","useStyleConfig","chakra","div","cx","__css","display","flexDirection","alignItems","displayName","h2"],"sourceRoot":""}